/*
 * This file is generated by jOOQ.
 */
package gim.postgresql.jooq.model.tables.records;


import gim.postgresql.jooq.model.tables.Member;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberRecord extends UpdatableRecordImpl<MemberRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.member.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.member.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.member.name_last</code>.
     */
    public void setNameLast(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.member.name_last</code>.
     */
    public String getNameLast() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.member.name_first</code>.
     */
    public void setNameFirst(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.member.name_first</code>.
     */
    public String getNameFirst() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.member.active</code>.
     */
    public void setActive(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.member.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MemberRecord
     */
    public MemberRecord() {
        super(Member.MEMBER);
    }

    /**
     * Create a detached, initialised MemberRecord
     */
    public MemberRecord(Integer id, String nameLast, String nameFirst, Boolean active) {
        super(Member.MEMBER);

        setId(id);
        setNameLast(nameLast);
        setNameFirst(nameFirst);
        setActive(active);
        resetChangedOnNotNull();
    }
}
